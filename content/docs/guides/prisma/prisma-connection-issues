---
title: Prisma connection issues
enableTableOfContents: true
---

This topics describes how to resolve connection issue you may encounter when using Prisma with Neon.

## Connection timeouts

A compute node in Neon has two main states: Active and Idle.
    
Active means that PostgreSQL is currently running. If there are no active queries for 5 minutes, the activity monitor gracefully places the compute node into the Idle state to save energy and resources.
    
When you connect to an idle compute (in your case, using Prisma), Neon automatically activates it. Activation typically happens within a few seconds. 
    
Now when this error is thrown, it most likely means that the Prisma query engine timed out before the compute node is active (or you’re trying to connect to a deleted project).
    
The solution would be to [increase the connection pool timeout](https://www.prisma.io/docs/guides/performance-and-optimization/connection-management#increasing-the-pool-timeout). You can do that by setting the `pool_timeout` ****parameter to a value larger than the default (10 seconds) so, for example, appending `&pool_timeout=20` to the end of the connection string.
    
In the future, when we bring down the time to activate an idle compute node, you wouldn’t need this workaround. Also, supporting more regions in the future will most likely decrease latency as well